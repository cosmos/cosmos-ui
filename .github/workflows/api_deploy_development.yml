name: Update existing droplet in Digital Ocean

on:
  pull_request:
    branches:
      - '*'
    paths:
      - 'api/**'
env:
  WORKING_DIRECTORY: ./api
jobs:
  test:
    name: Compile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
    - uses: bahmutov/npm-install@v1
      with:
        working-directory: ${{env.WORKING_DIRECTORY}}
    - name: Build image
      run: docker build -t lunieapi . 
      working-directory: ${{env.WORKING_DIRECTORY}}
    - name: Save file
      run: docker save lunieapi | gzip > lunieapi.tgz
      working-directory: ${{env.WORKING_DIRECTORY}}
    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST_STAGING }}
        USERNAME: root
        KEY: ${{ secrets.DO_PRIVATE_KEY }}
      with:
        source: "api/lunieapi.tgz,api/docker-compose.yml,api/Caddyfile"
        target: "/root/"
    # - name: Installing Docker Compose
    #   run: ssh root@${{ secrets.HOST_STAGING }} "sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose; sudo chmod +x /usr/local/bin/docker-compose"
    #   working-directory: ${{env.WORKING_DIRECTORY}}
    # - name: Run on Digital Ocean
    #   run: ssh root@${{ secrets.HOST_STAGING }} "docker image prune -a -f; docker load < lunieapi.tgz;export HASURA_URL="https://staging-db.lunie.io/v1/graphql"; export HASURA_ADMIN_KEY="${{ secrets.LUNIE_STAGING_DB_KEY }}"; export SENTRY_DSN="${{ secrets.SENTRY_DSN_API_STAGING }}"; docker stack deploy -c docker-compose.yml lunieapi; docker service update --image lunieapi:latest --force lunieapi_lunieapi"
    #   working-directory: ${{env.WORKING_DIRECTORY}}
