version: 2.1

# Here we define all the paths and versions of images we want to play with
aliases:
  # Define paths and never think about them again
  - &WORKSPACE /tmp/voyager
  # Pick docker versions here only, then use the aliases in the executors definition
  - &docker-node tendermintdev/voyager_node
  - &docker-browsers tendermintdev/voyager_node_browser
  - &docker-go circleci/golang:1.11
  - &docker-deploy tendermintdev/website_deployment

# reusable commands
commands:
  yarn-install:
    description: "[YARN] update and install"
    steps:
      - restore_cache:
          keys:
            - v4-dependencies-root-{{ checksum "package.json" }}
            - v4-dependencies-root-

      - run: yarn install
      - save_cache:
          paths:
            - yarn.lock
            - node_modules
          key: v4-dependencies-root-{{ checksum "package.json" }}

# a reusable executor
executors:
  web:
    docker:
      - image: *docker-browsers
    working_directory: *WORKSPACE

  node:
    docker:
      - image: *docker-node
    working_directory: *WORKSPACE

  go:
    docker:
      - image: *docker-go
    working_directory: *WORKSPACE

  web_deploy:
    docker:
      - image: *docker-deploy
    environment:
      BASH_ENV: /root/.bashrc
      AWS_REGION: us-east-1

jobs:
  pendingUpdated:
    executor: node
    steps:
      - checkout
      - run: yarn add simsala
      - run: node node_modules/simsala/src/cli.js check --pending-path ./changes

  lint:
    executor: node
    steps:
      - checkout
      - yarn-install
      - run: yarn run lint

  testUnit:
    executor: web
    steps:
      - checkout
      - yarn-install
      - run:
          name: Test
          command: |
            yarn run test:unit --coverage --maxWorkers=2
            bash <(curl -s https://codecov.io/bash)
          no_output_timeout: 120

  security:
    executor: web
    steps:
      - checkout
      - run:
          name: Audit
          command: |
            set +e

            SUMMARY="$(yarn audit | grep Severity)"
            VULNERABILITIES=".*(High|Critical).*"

            if [[ $SUMMARY =~ $VULNERABILITIES ]]; then
              echo "Unsafe dependencies found: $SUMMARY" >&2
              exit 1
            fi
            echo "Your dependencies are secure enough: $SUMMARY"
            exit 0

  testE2e:
    docker:
      # Primary container image where all steps run.
     - image: *docker-browsers
      # Secondary container image on common network. 
     - image: lunieio/testnet:v0.34.7
    steps:
      - checkout
      - attach_workspace:
          at: *WORKSPACE
      - yarn-install
      - run:
          # needs to be done in CI to be sure it is build once we start the tests
          name: Build for E2E test
          command: yarn test:e2e:build
      - run:
          name: Test
          command: yarn serve:dist & yarn test:e2e:browserstack
          no_output_timeout: 120
      - store_artifacts:
          path: ./screenshots
          when: on_fail

  # Create release.
  release:
    executor: node
    steps:
      - checkout
      - run: |
          yarn add simsala
          git config user.email "bot@lunie.io"
          git config user.name "Lunie Bot"
          node node_modules/simsala/src/cli.js release-candidate --semver prerelease --pending-path ./changes --owner luniehq --repository lunie --token $GIT_BOT_TOKEN --message "Please manually test before merging this to master"
      
  # Push merges to master immediately back to develop to stay in sync
  mergeBack:
    executor: node
    steps:
      - checkout
      - run:
          command: |
            git config user.email "bot@lunie.io"
            git config user.name "Lunie Bot"
            git remote add bot https://${GIT_BOT_TOKEN}@github.com/luniehq/lunie.git
            git checkout develop -f
            git pull -f --no-edit
            git merge origin/master --no-edit
            git push


workflows:
  version: 2
  test:
    jobs:
      # Static checks before
      - pendingUpdated:
          filters:
            branches:
              ignore: 
                - release
                - master
                - develop
                - /release-candidate.*/

      - security:
          filters:
            branches:
              ignore: release

      - lint:
          filters:
            branches:
              ignore: release

      - testUnit:
          filters:
            branches:
              ignore: release

      - testE2e:
          filters:
            branches:
              ignore:
                - release
                - master

  # Every UTC midnight we go on develop and release
  release:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - release

  releaseManually:
    jobs:
      - release:
          filters:
            branches:
              only: release

  mergeBack:
    jobs:
      - mergeBack:
          filters:
            branches:
              only: master
